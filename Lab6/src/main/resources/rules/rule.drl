//created on: 2015.04.22.
package rules

import java.lang.*;
import util.Message;
import nodes.*;
//list any import classes here.



//declare any global variables here

declare Message
	@role( event )
	@timestamp( timestamp )
	@duration ( dur )
end


rule "Log"
	when
		Message($sender : sender, $id : id, $timestamp : timestamp, $duration : dur, dur > 0)
	then
		//System.out.println("Message => (Sender: " + $sender + ", Id: " + $id + ", timestamp: " + $timestamp + ", duration: " + $duration + ")");
end

rule "Rule 1 : JOIN"

    when
   		$endBIN : Message (sender == BillingInfoNode.class, dur > 0, $idBIN : id, $finishedAtBIN : (timestamp+dur))

		Message (sender == ProcessReservationNode.class, id == $idBIN, dur > 0, $finishedAtPRN : (timestamp+dur))
		eval(Math.abs($finishedAtPRN - $finishedAtBIN) > 5000)

    then
		System.out.println("Lassú join!");
end


rule "Rule 2"
	when
		$countSMORN : Number() from accumulate( $m1 : Message(sender == SelectModeOfReciptNode.class, dur > 0) over window:time(30s), count($m1))
		$countDAN : Number() from accumulate( $m2 : Message(sender == DeliveryAddressNode.class, dur > 0) over window:time(30s), count($m2))

		eval (($countSMORN.longValue() - $countDAN.longValue()) * 2 < $countDAN.longValue())
	then
		System.out.println("Sok a házhozszállítás! SZÁ: " + ($countSMORN.longValue() - $countDAN.longValue()) + ", HSZ: " + $countDAN.longValue());
end


rule "Rule 3"
	when
		Message(sender == TravelInfoNode.class, $durLast : dur, dur > 0) over window:length(1)

		accumulate ( 
			$m : Message(sender == TravelInfoNode.class, $dur : dur, dur > 0) over window:time(30s),
			$avg : average($dur), $cnt : count($m) 
		)
		
		
//		eval ($cnt.longValue() == 10)
		eval ($avg.doubleValue()*2 < $durLast)
		
	then
		System.out.println("Lassú végrehajtás!::" + $avg + "::" + $durLast);
end


rule "Rule 4"
	when
		Message($senderLast : sender, $durLast : dur, dur > 0) over window:length(1)

		accumulate ( 
			$m : Message(sender == $senderLast, $dur : dur, dur > 0) over window:time(30s),
			$avg : average($dur), $cnt : count($m) 
		)
		
		
//		eval ($cnt.longValue() == 10)
		eval ($avg.doubleValue()*2 < $durLast)
		
	then
		System.out.println("Lassú végrehajtás (ált)!::" + $senderLast + "::" + $cnt + "::" + $avg + "::" + $durLast);
end